/*
6. 관계 만들기
6.1 관계란
*/
-- 무엇? 여러 테이블에 분산된 데이터가 어떻게 서로 연결돼 있는지를 나타내는 것
-- 테이블: 서로 관련 있는 데이터를 묶은 것
-- 관계: 쉽게 여러 테이블에 흩어져 있는 데이터 간 연결고리
-- 관계의 유형 3가지
-- - 일대일(1:1)
-- - 일대다(1:N)
-- - 다대다(N:M)

-- 1. 일대일 관계(1:1, one-to-one)
-- 하나의 데이터가 다른 한 데이터와만 연결된 관계
-- 예: 사용자-개인 설정, 나라-수도, 사람-주민등록증

-- 2. 일대다 관계(1:N, one-to-many)
-- 하나의 데이터가 여러 데이터와 연결된 관계
-- 포함 또는 소유의 관계
-- 예: 부모-자식, 사진-댓글, 회사-직원

-- 3. 다대다 관계(N:M, many-to-many)
-- 여러 데이터가 여러 데이터와 연결된 관계('연결 고리' 필요)
-- 예: 
-- 1) 학생-과목
-- 한 학생이 여러 과목 수강 가능
-- 한 과목은 여러 학생을 수용 가능
-- 2) 사용자-사진
-- 한 사용자가 여러 사진에 좋아요 가능
-- 한 사진은 여러 사용자로부터 좋아요 가능

-- 다대다(N:M)는 사실상 직접 표현할 수 없기 때문에, 두 개의 일대다 관계로 분해해서 처리
-- 학생(1)-(N)수강등록(M)-(1)과목
-- 사용자(1)-(N)좋아요(M)-(1)사진
-- 여기서 '수강등록', '좋아요'는 연결 고리(=중간 테이블)가 된다.


-- 테이블 간 관계는 어떻게 만들어질까?
-- 관계를 만드는 키가 존재
-- => 기본키와 외래키의 연결을 통해 만들어짐

-- 기본키(PK, Primary Key)
-- 테이블의 각 행을 고유하게 식별할 수 있는 컬럼
-- 레코드를 구분하는 컬럼 또는 컬럼의 조합을 말함
-- 예: 주민등록번호
-- 다음 4가지 특징을 만족해야 함
-- - 유일성: 유일한 값을 가져야 함(= UNIQUE 제약 조건)
-- - 비 널: NULL이 올 수 없고, 반드시 값을 가져야 함(= NOT NULL 제약 조건)
-- - 불변성: 한 번 정해진 값은 바뀔 수 없음
-- - 식별성: 레코드를 구분하는 명확한 기준 역할을 해야 함
-- 일반적으로 기본키는 id로 명명


-- 외래키(FK, Foreign Key)
-- 다른 테이블의 기본키를 가리키는 컬럼(참조 = 주소로 저장)
-- 두 테이블을 연결하는 역할




-- 제약 조건이란?
-- 컬럼 생성 시 부여하는 특성
-- 저장할 수 있는 값에 제한이나 규칙을 설정
-- - AUTO_INCREMENT: 컬럼의 값을 1씩 자동 증가하여 저장(정수형에 붙일 수 있으며 기본키와 함께 사용됨)
-- - UNIQUE: 컬럼에 값이 고유하도록 강제(중복 값을 입력하면 에러), 지문에 비유
-- - NOT NULL: 컬럼에 반드시 값이 입력되어야 함(값을 입력하지 않으면 즉, NULL 값이 들어가면 에러)
-- - DEFAULT: 컬럼에 입력값이 없을 시, 기본값을 부여
-- - CHECK: 컬럼에 특정 조건을 부여, 반드시 만족하도록 강제(조건을 만족하지 않는 값 입력 시 에러), 예: 반드시 짝수
-- - UNSIGNED: 숫자형 컬럼에 음수 허용을 금지(양수값만 저장하도록 제한)

-- 제약 조건의 사용 예
CREATE TABLE users(
  id INTEGER AUTO_INCREMENT, -- 아이디(자동으로 1씩 증가)
  email VARCHAR(100) UNIQUE, -- 이메일(고유한 값만 허용)
  name VARCHAR(50) NOT NULL, -- 사용자명(NULL을 허용하지 않음)
  status VARCHAR(10) DEFAULT 'active', -- 계좌 상태(기본값은 'active')
  balance INTEGER UNSIGNED, -- 계좌 잔액(음수를 허용하지 않음)
  age INTEGER CHECK(age >= 18), -- 나이(18세 이상만 허용)
  PRIMARY KEY(id) -- 기본키 지정: id
);
